diff --git a/core/modules/block/config/schema/block.schema.yml b/core/modules/block/config/schema/block.schema.yml
index 2e89fe7..530a69d 100644
--- a/core/modules/block/config/schema/block.schema.yml
+++ b/core/modules/block/config/schema/block.schema.yml
@@ -39,6 +39,9 @@ block.block.*:
             pages:
               type: string
               label: 'Show block on specific pages'
+            error_pages:
+              type: boolean
+              label: 'Show block on error pages'
         role:
           type: mapping
           label: 'Roles'
diff --git a/core/modules/block/lib/Drupal/block/BlockAccessController.php b/core/modules/block/lib/Drupal/block/BlockAccessController.php
index 4f5182b..37a0785 100644
--- a/core/modules/block/lib/Drupal/block/BlockAccessController.php
+++ b/core/modules/block/lib/Drupal/block/BlockAccessController.php
@@ -15,6 +15,7 @@
 use Drupal\Core\Path\AliasManagerInterface;
 use Drupal\Component\Utility\Unicode;
 use Symfony\Component\DependencyInjection\ContainerInterface;
+use Symfony\Component\HttpFoundation\RequestStack;
 
 /**
  * Provides a Block access controller.
@@ -29,16 +30,26 @@ class BlockAccessController extends EntityAccessController implements EntityCont
   protected $aliasManager;
 
   /**
+   * The request stack.
+   *
+   * @var \Symfony\Component\HttpFoundation\RequestStack
+   */
+  protected $requestStack;
+
+  /**
    * Constructs a BlockAccessController object.
    *
    * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
    *   The entity type definition.
    * @param \Drupal\Core\Path\AliasManagerInterface $alias_manager
    *   The alias manager.
+   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   *   The request stack.
    */
-  public function __construct(EntityTypeInterface $entity_type, AliasManagerInterface $alias_manager) {
+  public function __construct(EntityTypeInterface $entity_type, AliasManagerInterface $alias_manager, RequestStack $request_stack) {
     parent::__construct($entity_type);
     $this->aliasManager = $alias_manager;
+    $this->requestStack = $request_stack;
   }
 
   /**
@@ -47,7 +58,8 @@ public function __construct(EntityTypeInterface $entity_type, AliasManagerInterf
   public static function createInstance(ContainerInterface $container, EntityTypeInterface $entity_type) {
     return new static(
       $entity_type,
-      $container->get('path.alias_manager')
+      $container->get('path.alias_manager'),
+      $container->get('request_stack')
     );
   }
 
@@ -81,6 +93,11 @@ protected function checkAccess(EntityInterface $entity, $operation, $langcode, A
       return FALSE;
     }
 
+    // Blocks can be configured to not appear on error pages.
+    if (isset($visibility['path']['error_pages']) && empty($visibility['path']['error_pages']) && $this->requestStack->getCurrentRequest()->attributes->has('exception')) {
+      return FALSE;
+    }
+
     // Page path handling.
     // Limited visibility blocks must list at least one page.
     if (!empty($visibility['path']['visibility']) && $visibility['path']['visibility'] == BLOCK_VISIBILITY_LISTED && empty($visibility['path']['pages'])) {
diff --git a/core/modules/block/lib/Drupal/block/BlockFormController.php b/core/modules/block/lib/Drupal/block/BlockFormController.php
index 4b4c859..1308489 100644
--- a/core/modules/block/lib/Drupal/block/BlockFormController.php
+++ b/core/modules/block/lib/Drupal/block/BlockFormController.php
@@ -163,6 +163,12 @@ public function form(array $form, array &$form_state) {
         '#description' => $description,
       );
     }
+    $form['visibility']['path']['error_pages'] = array(
+      '#type' => 'checkbox',
+      '#title' => $this->t('Show block on error pages'),
+      '#default_value' => !empty($visibility['path']['error_pages']) ? $visibility['path']['error_pages'] : TRUE,
+      '#description' => $this->t('Whether blocks should appear on error pages like access denied or page not found.'),
+    );
 
     // Configure the block visibility per language.
     if ($this->languageManager->isMultilingual() && $this->languageManager instanceof ConfigurableLanguageManagerInterface) {
diff --git a/core/modules/help/lib/Drupal/help/Tests/HelpTest.php b/core/modules/help/lib/Drupal/help/Tests/HelpTest.php
index dd21f0e..2a85a6c 100644
--- a/core/modules/help/lib/Drupal/help/Tests/HelpTest.php
+++ b/core/modules/help/lib/Drupal/help/Tests/HelpTest.php
@@ -48,12 +48,27 @@ public function setUp() {
     $this->getModuleList();
 
     // Create users.
-    $this->adminUser = $this->drupalCreateUser(array('access administration pages', 'view the administration theme', 'administer permissions'));
+    $this->adminUser = $this->drupalCreateUser(array('access administration pages', 'view the administration theme', 'administer permissions', 'administer modules'));
     $this->anyUser = $this->drupalCreateUser(array());
   }
 
   /**
-   * Logs in users, creates dblog events, and tests dblog functionality.
+   * Tests help blocks on some admin page.
+   */
+  public function testHelpOnAdminPage() {
+    $this->drupalLogin($this->anyUser);
+    $this->drupalGet('admin/modules');
+    $result = $this->xpath('//div[contains(@class, "region-help")]');
+    $this->assertEqual(count($result), 0);
+
+    $this->drupalLogin($this->adminUser);
+    $this->drupalGet('admin/modules');
+    $result = $this->xpath('//div[contains(@class, "region-help")]');
+    $this->assertEqual(count($result), 1);
+  }
+
+  /**
+   * Tests the admin/help pages for all core modules.
    */
   public function testHelp() {
     // Login the admin user.
diff --git a/core/modules/system/lib/Drupal/system/Plugin/Block/SystemHelpBlock.php b/core/modules/system/lib/Drupal/system/Plugin/Block/SystemHelpBlock.php
index 5794603..c95b44c 100644
--- a/core/modules/system/lib/Drupal/system/Plugin/Block/SystemHelpBlock.php
+++ b/core/modules/system/lib/Drupal/system/Plugin/Block/SystemHelpBlock.php
@@ -91,11 +91,6 @@ public function access(AccountInterface $account) {
   protected function getActiveHelp(Request $request) {
     $output = '';
     $router_path = $request->attributes->get('_system_path');
-    // We will always have a path unless we are on a 403 or 404.
-    if (!$router_path) {
-      return '';
-    }
-
     $arg = drupal_help_arg(explode('/', $router_path));
 
     foreach ($this->moduleHandler->getImplementations('help') as $module) {
diff --git a/core/profiles/standard/config/install/block.block.bartik_help.yml b/core/profiles/standard/config/install/block.block.bartik_help.yml
index 3e139c6..b41e0d1 100644
--- a/core/profiles/standard/config/install/block.block.bartik_help.yml
+++ b/core/profiles/standard/config/install/block.block.bartik_help.yml
@@ -13,6 +13,7 @@ visibility:
   path:
     visibility: 0
     pages: ''
+    error_pages: false
   role:
     roles: {  }
   node_type:
diff --git a/core/profiles/standard/config/install/block.block.seven_help.yml b/core/profiles/standard/config/install/block.block.seven_help.yml
index f54a908..62133ea 100644
--- a/core/profiles/standard/config/install/block.block.seven_help.yml
+++ b/core/profiles/standard/config/install/block.block.seven_help.yml
@@ -13,6 +13,7 @@ visibility:
   path:
     visibility: 0
     pages: ''
+    error_pages: false
   role:
     roles: {  }
   node_type:
